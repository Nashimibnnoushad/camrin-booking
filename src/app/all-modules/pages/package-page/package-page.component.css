 /* Custom Checkbox Style */
 .custom-checkbox {
    /* position: relative;
    display: inline-block;
    width: 24px;
    height: 24px; */
    width: 100%;
  }

  .col-4 {
    flex: 0 0 32.333333%;
    max-width: 32.333333%;
}
  .custom-checkbox input[type="checkbox"] {
    opacity: 0;
    /* width: 0; */
    height: 0;
  }

  .custom-checkbox .checkbox-checkmark {
    position: absolute;
    top: 0px;
    left: 0;
    height: 24px;
    width: 24px;
    background-color: #ccc;
    border-radius: 4px;
  }

  .custom-checkbox input[type="checkbox"]:checked ~ .checkbox-checkmark {
    background-color: #4caf50;
  }

  .custom-checkbox .checkbox-checkmark::after {
    content: "";
    position: absolute;
    display: none;
  }

  .custom-checkbox input[type="checkbox"]:checked ~ .checkbox-checkmark::after {
    display: block;
    left: 8px;
    top: 4px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }

  .number-input {
    width: 35px;
    height: 35px;
    padding: 10px;
    margin-left: 10px;
    text-align: center;
    font-size: 15px;
    color: #333;
    background: rgba(255, 255, 255, 0.5);
    border: 2px solid #ccc;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    transition: border-color 0.3s, background-color 0.3s;
    float: right;
  }
  
  .number-input:focus {
    border-color: #007bff;
    background: rgba(255, 255, 255, 0.8); /* Slightly more opaque on focus */
    outline: none;
  }
  
  .number-input::-webkit-inner-spin-button,
  .number-input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  .number-input::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  .event-card {
    background-color: #807f7f;
    border: none;
    color: #fff;
    padding: 10px;
    border-radius: 5px;
    cursor: pointer;
    margin-bottom: 15px;
    margin: 5px;
  }
  .features-title {
    font-size: 14px;
    font-weight: bold;
    margin-bottom: 10px;
    text-align: left !important;
  }

  .package-btn {
    background: #FF3115;
    border-radius: 170px;
    border-color: #FF3115;
    font-weight: 800;
    font-size: 16px;
    padding: 16px 40px;
    font-weight: 600;
    color: #ffffff;
    float: right;
    margin-bottom: 20px;
    margin-right: 20px;
}

  /* loader */
.loader-div {
  width: 80px;
  margin: 15px auto;
  height: 300px;
}
.loader {
  --uib-size: 70px;
  --uib-color: #115241;
  --uib-speed: 1.75s;
  --uib-bg-opacity: .1;
  position: relative;
  display: flex;
  flex-direction: column;
  height: var(--uib-size);
  width: var(--uib-size);
  transform: rotate(45deg);
  animation: rotate calc(var(--uib-speed) * 2) ease-in-out infinite;
  margin-top: 150px;
}

.half {
  --uib-half-size: calc(var(--uib-size) * 0.435);
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--uib-half-size);
  height: var(--uib-half-size);
  overflow: hidden;
  isolation: isolate;

  &:first-child {
    top: 8.25%;
    left: 8.25%;
    border-radius: 50% 50% calc(var(--uib-size) / 15);
  }

  &:last-child {
    bottom: 8.25%;
    right: 8.25%;
    transform: rotate(180deg);
    align-self: flex-end;
    border-radius: 50% 50% calc(var(--uib-size) / 15);

    &::after {
      animation-delay: calc(var(--uib-speed) * -1);
    }
  }

  &::before {
    content: '';
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--uib-color);
    opacity: var(--uib-bg-opacity);
    transition: background-color 0.3s ease;
  }

  &::after {
    content: '';
    position: relative;
    z-index: 1;
    display: block;
    background-color: var(--uib-color);
    height: 100%;
    transform: rotate(45deg) translate(-3%, 50%) scaleX(1.2);
    width: 100%;
    transform-origin: bottom right;
    border-radius: 0 0 calc(var(--uib-size) / 20) 0;
    animation: flow calc(var(--uib-speed) * 2) linear infinite both;
    transition: background-color 0.3s ease;
  }
}

@keyframes flow {
  0% {
    transform: rotate(45deg) translate(-3%, 50%) scaleX(1.2);
  }
  30% {
    transform: rotate(45deg) translate(115%, 50%) scaleX(1.2);
  }

  30.001%,
  50% {
    transform: rotate(0deg) translate(-85%, -85%) scaleX(1);
  }

  80%,
  100% {
    transform: rotate(0deg) translate(0%, 0%) scaleX(1);
  }
}

@keyframes rotate {
  0%,
  30% {
    transform: rotate(45deg);
  }

  50%,
  80% {
    transform: rotate(225deg);
  }

  100% {
    transform: rotate(405deg);
  }
}